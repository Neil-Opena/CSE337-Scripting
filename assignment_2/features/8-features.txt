finally yield elif as not except yield except class exec yield lambda pass assert finally if if from print del del is as assert except elif pass from except exec yield is del break print raise else pass if else with try exec
yield from yield class with assert lambda else while return yield is if not with else while import del for while yield and assert lambda raise pass return exec break not try continue yield assert return import class for finally elif try
lambda lambda class try continue if if or else lambda break exec break finally global print while finally exec break if return from lambda not and return print exec lambda as is class lambda exec lambda lambda if return finally def else
class else try return try assert in while is pass lambda print lambda try def pass with pass pass not or for not with is break del class def break if for break print except class in
as print from while lambda as break continue not import else for import with is raise as import global as pass try from with raise with pass except elif class except del class return continue elif lambda assert and while
raise while with for exec and raise as if finally as yield exec continue except assert break global return from from as class with from return finally not print yield raise def return continue except not assert lambda exec return def in
is exec with is not in and for raise global in import from yield elif break raise raise yield def exec with finally from global or else not break return global or def try lambda and assert in def continue if break
or def return import except with except import not finally del continue elif else raise class class is global else with def from except del return del for except pass exec continue class and import
try global for not continue print or from break class not return yield in global return not assert try import del class for or def for from assert print not lambda with as except print if
if for for not import exec as lambda not in continue global return not not def for with pass return continue from elif or exec else finally not raise finally while is try if as and import
in else class elif elif assert from in as from del try import assert finally else del elif print in return def class assert print print global is else del except import except not and exec while assert except continue break while
else raise pass break in or try global except while def as def exec in with finally yield global and for not assert raise not for import and global else global print lambda if while
import for or is try or exec while return or return from for del assert del while exec del lambda is while in for is if except as or and import except exec break assert exec raise not
elif del return pass else raise def not in raise except break return assert from try yield is del except break try break break else import elif if finally return not return yield continue assert import as not if finally class try yield if
def while exec from class else except break elif break class is raise is assert and or raise continue except continue def elif yield assert with not continue del def except break pass and raise
import lambda else else except def in else return try del print def if def lambda raise break import else def return continue or except as is continue import for while while assert and def and as not raise try not and
print and import del raise pass def in del not pass assert return for print for else not class assert pass del while return exec as elif in not from and class for global print global
while global not elif finally as return elif import assert from not global not break exec not while as lambda not from try from as from in else global with with pass in with global elif continue
or break exec and raise not break if import return and lambda continue and import if or global if exec yield exec in and if global from as and if try finally if break as is break not class if lambda lambda raise and
